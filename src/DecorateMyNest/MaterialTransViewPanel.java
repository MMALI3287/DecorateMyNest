/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package DecorateMyNest;

import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Musaddique Ali
 */
public class MaterialTransViewPanel extends javax.swing.JPanel {
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form AdminViewPanel
     */
    public MaterialTransViewPanel() {
        initComponents();
        setRecordsToTable();
    }

    private void setRecordsToTable() {
        try {
            Welcome.jdbc.preparedStatement = Welcome.jdbc.connection
                    .prepareStatement("SELECT * FROM MaterialTransaction;");
            Welcome.jdbc.resultSet = Welcome.jdbc.preparedStatement.executeQuery();
            model = (DefaultTableModel) materialTransactionTable.getModel();
            model.setRowCount(0);
            while (Welcome.jdbc.resultSet.next()) {
                int transactionID = Welcome.jdbc.resultSet.getInt("TransactionID");
                int materialID = Welcome.jdbc.resultSet.getInt("MaterialID");
                int quantity = Welcome.jdbc.resultSet.getInt("Quantity");
                int vendorID = Welcome.jdbc.resultSet.getInt("VendorID");

                model.addRow(new Object[] { transactionID, materialID, quantity, vendorID });
            }
            materialTransactionTable.setModel(model);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        List<String> columnNamesList = Welcome.jdbc.getColumns("MaterialTransaction");

        jComboBox1.removeAllItems();

        DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
        for (String columnName : columnNamesList) {
            comboBoxModel.addElement(columnName);
        }

        jComboBox1.setModel(comboBoxModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        materialTransactionTable = new javax.swing.JTable();
        dltbtn = new javax.swing.JButton();

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(102, 255, 255));

        jComboBox1.setBackground(new java.awt.Color(255, 255, 250));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField1.setBackground(new java.awt.Color(255, 255, 250));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(255, 255, 250));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("OK");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        materialTransactionTable.setBackground(new java.awt.Color(204, 255, 255));
        materialTransactionTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        materialTransactionTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        materialTransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TransactionID", "MaterialID", "Quantity", "VendorID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        materialTransactionTable.setRowHeight(30);
        materialTransactionTable.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(materialTransactionTable);

        dltbtn.setBackground(new java.awt.Color(255, 255, 250));
        dltbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dltbtn.setText("Delete");
        dltbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dltbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dltbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(280, 280, 280))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(dltbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(318, 318, 318))))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(dltbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(246, 246, 246))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        {
            String selectedColumn = (String) jComboBox1.getSelectedItem();
            String searchTerm = jTextField1.getText();

            try {
                String query = "SELECT * FROM MaterialTransaction WHERE " + selectedColumn + " LIKE ?";
                Welcome.jdbc.preparedStatement = Welcome.jdbc.connection.prepareStatement(query);
                Welcome.jdbc.preparedStatement.setString(1, "%" + searchTerm + "%");

                Welcome.jdbc.resultSet = Welcome.jdbc.preparedStatement.executeQuery();
                model.setRowCount(0); // Clear existing data

                while (Welcome.jdbc.resultSet.next()) {
                    int transactionID = Welcome.jdbc.resultSet.getInt("TransactionID");
                    int materialID = Welcome.jdbc.resultSet.getInt("MaterialID");
                    int quantity = Welcome.jdbc.resultSet.getInt("Quantity");
                    int vendorID = Welcome.jdbc.resultSet.getInt("VendorID");

                    model.addRow(new Object[] { transactionID, materialID, quantity, vendorID });
                }

                // Update the table model with search results
                materialTransactionTable.setModel(model);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }

    }// GEN-LAST:event_jButton1ActionPerformed

    private void dltbtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_dltbtnActionPerformed
        // TODO add your handling code here:
        {
            int selectedRowIndex = materialTransactionTable.getSelectedRow();

            if (selectedRowIndex == -1) {
                JOptionPane.showMessageDialog(this, "Please select a row to delete.");
                return;
            }

            int id = (int) materialTransactionTable.getValueAt(selectedRowIndex, 0);

            int rowsAffected = Welcome.jdbc.deleteData("MaterialTransaction", id, "TransactionID");

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Row deleted successfully.");

                DefaultTableModel model = (DefaultTableModel) materialTransactionTable.getModel();
                model.removeRow(selectedRowIndex);
            } else {
                JOptionPane.showMessageDialog(this, "Error deleting row.");
            }
            rowsAffected = Welcome.jdbc.deleteData("FinancialTransactions", id, "TransactionID");

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Row deleted successfully.");

                DefaultTableModel model = (DefaultTableModel) materialTransactionTable.getModel();
                model.removeRow(selectedRowIndex);
            } else {
                JOptionPane.showMessageDialog(this, "Error deleting row.");
            }
        }

    }// GEN-LAST:event_dltbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dltbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JTable materialTransactionTable;
    // End of variables declaration//GEN-END:variables
}
